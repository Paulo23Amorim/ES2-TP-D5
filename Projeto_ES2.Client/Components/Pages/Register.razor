@page "/register"
@using System.ComponentModel.DataAnnotations
@using Projeto_ES2.Client.Components.DTOs
@using Projeto_ES2.Client.Services
@inject NavigationManager Navigation
@inject AuthServiceClient AuthService

<h3 class="text-xl font-bold mb-4">Registo</h3>

<EditForm Model="registerModel" OnValidSubmit="HandleRegister">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-2">
        <label>Nome:</label>
        <InputText @bind-Value="registerModel.Name" class="form-control" />
    </div>

    <div class="mb-2">
        <label>Email:</label>
        <InputText @bind-Value="registerModel.Email" class="form-control" />
    </div>

    <div class="mb-2">
        <label>Password:</label>
        <InputText @bind-Value="registerModel.Password" type="password" class="form-control" />
    </div>

    <button type="submit" class="btn btn-success">Registar</button>
</EditForm>

<p class="mt-3">Já tens conta? <a href="/login">Inicia sessão aqui</a></p>

@code {
    private RegisterModel registerModel = new();
    private string loginError = string.Empty;


    private async Task HandleRegister()
    {
        var dto = new RegisterDTO
        {
            Name = registerModel.Name,
            Email = registerModel.Email,
            Password = registerModel.Password
            // TipoUtilizador por defeito já é "Utilizador"
        };

        var success = await AuthService.RegisterAsync(dto);

        if (success)
        {
            Navigation.NavigateTo("/login");
        }
        else
        {
            loginError = "Erro ao registar utilizador.";
        }
    }

    public class RegisterModel
    {
        [Required]
        public string Name { get; set; } = string.Empty;

        [Required]
        public string Email { get; set; } = string.Empty;

        [Required]
        public string Password { get; set; } = string.Empty;
    }
}