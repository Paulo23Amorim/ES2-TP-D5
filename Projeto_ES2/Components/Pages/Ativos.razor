@page "/Ativos"
@using Projeto_ES2.Components.DTOs
@inject HttpClient Http

<h3>Gestão de Ativos Financeiros</h3>

<div class="mb-3">
    <input class="form-control" placeholder="Pesquisar por nome..." @bind="filtroNome" />

    <select class="form-select mt-2" @bind="filtroTipo">
        <option value="">Todos os tipos</option>
        <option value="DepositoPrazo">Depósito a Prazo</option>
        <option value="FundoInvestimento">Fundo de Investimento</option>
        <option value="ImovelArrendado">Imóvel Arrendado</option>
    </select>

    <button class="btn btn-primary mt-3" @onclick="CarregarAtivos">Filtrar</button>
    <button class="btn btn-success mt-3 ms-2" @onclick="NovoAtivo">+ Novo Ativo</button>
</div>

@if (ativos == null)
{
<p>Carregando...</p>
}
else if (!ativos.Any())
{
<p>Nenhum ativo encontrado.</p>
}
else
{
<table class="table table-striped">
    <thead>
    <tr>
        <th>Nome</th>
        <th>Tipo</th>
        <th>Data Início</th>
        <th>Data Fim</th>
        <th>Imposto (%)</th>
        <th>Ações</th>
    </tr>
    </thead>
    <tbody>
    @foreach (var ativo in ativos)
    {
    <tr>
        <td>@ativo.nome</td>
        <td>@ativo.tipo</td>
        <td>@ativo.dataInicio.ToShortDateString()</td>
        <td>@ativo.dataFim.ToShortDateString()</td>
        <td>@ativo.imposto</td>
        <td>
            <button class="btn btn-info btn-sm me-1" @onclick="() => VerDetalhes(ativo.id)">Detalhes</button>
            <button class="btn btn-warning btn-sm me-1" @onclick="() => EditarAtivo(ativo.id)">Editar</button>
            <button class="btn btn-danger btn-sm" @onclick="() => ApagarAtivo(ativo.id)">Apagar</button>
        </td>
    </tr>
    }
    </tbody>
</table>
}

@code {
private List<AtivoFinanceiroDTO> ativos;
private string filtroNome = string.Empty;
private string filtroTipo = string.Empty;

protected override async Task OnInitializedAsync()
{
await CarregarAtivos();
}

private async Task CarregarAtivos()
{
var url = $"api/AtivoFinanceiro?nome={filtroNome}&tipo={filtroTipo}";
ativos = await Http.GetFromJsonAsync<List<AtivoFinanceiroDTO>>(url);
}

private void NovoAtivo()
{
NavigationManager.NavigateTo("/ativos/novo");
}

private void EditarAtivo(Guid id)
{
NavigationManager.NavigateTo($"/ativos/editar/{id}");
}

private void VerDetalhes(Guid id)
{
NavigationManager.NavigateTo($"/ativos/detalhes/{id}");
}

private async Task ApagarAtivo(Guid id)
{
var confirm = await JSRuntime.InvokeAsync<bool>("confirm", "Tem certeza que deseja apagar?");
if (confirm)
{
await Http.DeleteAsync($"api/AtivoFinanceiro/{id}");
await CarregarAtivos();
}
}

[Inject] NavigationManager NavigationManager { get; set; }
[Inject] IJSRuntime JSRuntime { get; set; }
}
