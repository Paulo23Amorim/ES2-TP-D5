@page "/login"
@using System.ComponentModel.DataAnnotations
@using Projeto_ES2.Components.Models
@inject NavigationManager Navigation
@inject HttpClient Http

<h3 class="text-xl font-bold mb-4">Login</h3>

@if (!string.IsNullOrEmpty(loginError))
{
<div class="alert alert-danger">@loginError</div>
}

<EditForm Model="loginModel" OnValidSubmit="HandleLogin" @formname="loginForm">

    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-2">
        <label>Email:</label>
        <InputText @bind-Value="loginModel.Email" class="form-control" />
    </div>

    <div class="mb-2">
        <label>Password:</label>
        <InputText @bind-Value="loginModel.Password" type="password" class="form-control" />
    </div>

    <button type="submit" class="btn btn-primary">Entrar</button>
</EditForm>

<p class="mt-3">Ainda não tens conta? <a href="/register">Regista-te aqui</a></p>

@code {
private LoginModel loginModel = new();
private string loginError = string.Empty;

private async Task HandleLogin()
{
loginError = string.Empty;

var loginRequest = new Utilizador
{
email = loginModel.Email,
password = loginModel.Password
};

try
{
var response = await Http.PostAsJsonAsync("api/Auth/login", loginRequest);
if (response.IsSuccessStatusCode)
{
var user = await response.Content.ReadFromJsonAsync<Utilizador>();
Console.WriteLine($"Login bem-sucedido: {user?.nome}");
Navigation.NavigateTo("/");
}
else
{
loginError = await response.Content.ReadAsStringAsync();
Console.WriteLine($"Erro ao autenticar: {loginError}");
}
}
catch (Exception ex)
{
loginError = "Erro na ligação com o servidor.";
Console.WriteLine("Erro ao chamar API: " + ex.Message);
}
}

public class LoginModel
{
[Required(ErrorMessage = "O email é obrigatório")]
public string Email { get; set; } = string.Empty;

[Required(ErrorMessage = "A password é obrigatória")]
public string Password { get; set; } = string.Empty;
}
}
