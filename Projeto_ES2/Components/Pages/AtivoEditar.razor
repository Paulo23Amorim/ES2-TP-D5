@page "/ativo-editar/{Id:guid}"
@using Projeto_ES2.Components.Models
@inject HttpClient Http
@inject NavigationManager Navigation

<h3 class="text-xl font-bold mb-4">Editar Ativo Financeiro</h3>

@if (ativo is null)
{
    <p>A carregar...</p>
}
else
{
    <AtivoForm Ativo="ativo" OnValidSubmit="Atualizar" CancelarCallback="Cancelar" BotaoTexto="Guardar" />
}

@code {
    [Parameter]
    public Guid Id { get; set; }

    private AtivoFinanceiro? ativo;

    protected override async Task OnInitializedAsync()
    {
        ativo = await Http.GetFromJsonAsync<AtivoFinanceiro>($"api/ativos/{Id}");
    }

    private async Task Atualizar()
    {
        var response = await Http.PutAsJsonAsync($"api/ativos/{Id}", ativo);
        if (response.IsSuccessStatusCode)
        {
            Navigation.NavigateTo("/ativos");
        }
        else
        {
            Console.WriteLine("Erro ao atualizar.");
        }
    }

    private void Cancelar()
    {
        Navigation.NavigateTo("/ativos");
    }
}
